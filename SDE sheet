CREDIT:- STRIVER (tuf)

Day1: (Arrays)
1.	Find the duplicate in an array of N+1 integers. 
2.	Sort an array of 0’s 1’s 2’s without using extra space or sorting algo
3.	Repeat and Missing Number
4.	Merge two sorted Arrays without extra space
5.	Kadane’s Algorithm
6.	Merge Overlapping Subinterval
7.	Set Matrix Zero
8.	Pascal Triangle
9.	Next Permutation
10.	Inversion of Array (Using Merge Sort)
11.	Stock Buy and Sell 
12.	Rotate Matrix  



Day2: (Math)
1.	Excel Column Number
2.	Find n^x in log N
3.	Count trailing zeros in factorial of a number
4.	Find GCD in Log N
5.	Grid Unique Paths
6.	Go through Puzzles from GFG (Search on own)
Day2: (Hashing)
7.	2 Sum problem
8.	4 Sum problem
9.	Longest Consecutive Sequence
10.	Longest Subarray with 0 sum
11.	Count number of subarrays with given XOR(this clears a lot of problems)
12.	Longest substring without repeat

Day3: (LinkedList)
1.	Reverse a LinkedList
2.	Find middle of LinkedList
3.	Merge two sorted Linked List
4.	Remove N-th node from back of LinkedList
5.	Delete a given Node when a node is given. (0(1) solution)
6.	Add two numbers as LinkedList  
7.	Find intersection point of Y LinkedList
8.	Check if a LinkedList is palindrome or not.
9.	Reverse a LinkedList in groups.
10.	Detect a cycle and removing loop(two different questions and same concept)
11.	Flattening of a LinkedList
12.	Rotate a LinkedList
13.	Clone a Linked List with random and next pointer.
.
Day4: (2-pointer)
1.	Merge two sorted LinkedLists
2.	Find the starting point of the loop.
3.	3 sum
4.	Trapping rainwater
5.	Remove Duplicate from Sorted array
6.	Max continuous number of 1’s
Day4: (Greedy)  
7.	N meeting in one room
8.	Activity Selection  
9.	Greedy algorithm to find minimum number of coins
10.	Fractional Knapsack Problem
11.	Minimum number of platforms required for a railway
12.	Job sequencing Problem



Day5: (Backtracking)
1.	N queens Problem
2.	Sudoko
3.	M coloring Problem (Graph prob)
4.	Rat in a Maze
5.	Print all Permutations of a string/array
6.	Word Break (print all ways)  
7.	Combination sum-1
8.	Combination sum-2
9.	Palindrome Partioning
10.	Subset Sum-1
11.	Subset Sum-2
12.	K-th permutation Sequence


Day6: (Divide and Conquer)
1.	1/N-th root of an integer (use binary search) (square root, cube root, ..)
2.	Matrix Median
3.	Find the element that appears once in sorted array, and rest element appears twice (Binary search)
4.	Search element in a sorted and rotated array.
5.	K-th element of two sorted arrays
6.	Media of an array    
Day6: (Bits) (Optional, very rare topic in interviews, but if you have time left, someone might ask)
7.	
8.	Check if a number if a power of 2 or not in O(1)
9.	Count total set bits
10.	Divide Integers without / operator
11.	Power Set (this is very important)
12.	Find MSB in o(1)
13.	Find square of a number without using multiplication or division operators.  


Day7: (Stack and Queue)
1.	Implement Stack / Implement Queue
2.	BFS
3.	Implement Stack using Queue
4.	Implement Queue using Stack
5.	Check for balanced parentheses
6.	Next Greater Element
7.	Next Smaller Element
8.	LRU cache (vvvv. imp)
9.	Largest rectangle in histogram
10.	Sliding Window maximum
11.	Implement Min Stack  
12.	Rotten Orange (Using BFS)  

Day8: (String)
1.	Reverse Words in a String
2.	Longest Palindrome in a string
3.	Roman Number to Integer and vice versa
4.	Implement ATOI/STRSTR
5.	Longest Common Prefix
6.	Rabin Karp
7.	Prefix Function/Z-Function
8.	KMP algo
9.	Minimum characters needed to be inserted in the beginning to make it palindromic.
10.	Check for Anagrams
11.	Count and Say
12.	Compare version numbers

Day9: (Binary Tree)
1.	Inorder Traversal (with recursion and without recursion)
2.	Preorder Traversal (with recursion and without recursion)
3.	Postorder Traversal (with recursion and without recursion)  
4.	LeftView Of Binary Tree
5.	Bottom View of Binary Tree
6.	Top View of Binary Tree
7.	Level order Traversal / Level order traversal in spiral form
8.	Height of a Binary Tree
9.	Diameter of Binary Tree
10.	Check if Binary tree is height balanced or not
11.	LCA in Binary Tree
12.	Check if two trees are identical or not


Day 10: (Binary Tree)
1.	Maximum path sum
2.	Construct Binary Tree from inorder and preorder
3.	Construct Binary Tree from Inorder and Postorder
4.	Symmetric Binary Tree
5.	Flatten Binary Tree to LinkedList
Day 10: (Binary Search Tree)
6.	Check if Binary Tree is mirror of itself or not  
7.	Populate Next Right pointers of Tree
8.	Search given Key in BST
9.	Construct BST from given keys.
10.	Check is a BT is BST or not  
11.	Find LCA of two nodes in BST
12.	Find the inorder predecessor/successor of a given Key in BST.

Day11: (BinarySearchTree)
1.	Floor and Ceil in a BST
2.	Find K-th smallest and K-th largest element in BST (2 different Questions)
3.	Find a pair with a given sum in BST
4.	BST iterator
5.	Size of the largest BST in a Binary Tree
6.	Serialize and deserialize Binary Tree
Day11: (Mixed Questions)
7.	Binary Tree to Double Linked List
8.	Find median in a stream of running integers.
9.	K-th largest element in a stream.
10.	Distinct numbers in Window.
11.	K-th largest element in an unsorted array.
12.	Flood-fill Algorithm


Day12: (Graph)
1.	Clone a graph (Not that easy as it looks)
2.	DFS
3.	BFS
4.	Detect A cycle in Undirected Graph/Directed Graph
5.	Topo Sort
6.	Number of islands (Do in Grid and Graph both)
7.	Bipartite Check
8.	SCC(using KosaRaju’s algo)
9.	Djisktra’s Algorithm
10.	Bellman Ford Algo
11.	Floyd Warshall Algorithm  
12.	MST using Prim’s Algo
13.	MST using Kruskal’s Algo  

Day13: (Dynamic Programming)
1.	Max Product Subarray
2.	Longest Increasing Subsequence
3.	Longest Common Subsequence
4.	0-1 Knapsack
5.	Edit Distance
6.	Maximum sum increasing subsequence  
7.	Matrix Chain Multiplication
8.	Maximum sum path in matrix, (count paths, and similar type do, also backtrack to find the maximum path)
9.	Coin change
10.	Subset Sum
11.	Rod Cutting
12.	Egg Dropping
13.	Word Break
14.	Palindrome Partitioning (MCM Variation)


Day14:
1.	Revise OS notes that you would have made during your sem
2.	If not made notes, spend 2 or 3  days and make notes from Knowledge Gate.
Day14:
1.	Revise DBMS notes that you would have made during your semesters.
2.	If not made notes, spend 2 or 3  days and make notes from Knowledge Gate.
Day15:
1.	Revise CN notes, that you would have made during your sem.
2.	If not made notes, spend 2 or 3  days and make notes from Knowledge Gate.
Day15:
1.	Make a note of how will your represent your projects, and prepare all questions related to tech which you have used in your projects. Prepare a note which you can say for 3-10 minutes when he asks you that say something about the project.
Hurrah!! You are ready for your placement after a month of hard-work without a cheat day.

